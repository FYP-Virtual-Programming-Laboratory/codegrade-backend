"""First migration

Revision ID: 85cd297477ae
Revises:
Create Date: 2025-02-18 18:44:09.873894

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '85cd297477ae'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('session',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_external_id'), 'session', ['external_id'], unique=True)
    op.create_table('exercise',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=False),
    sa.Column('instructions', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=True),
    sa.Column('difficulty', sa.Enum('EASY', 'MODERATE', 'HARD', name='exercise__difficulty'), nullable=True),
    sa.Column('status', sa.Enum('COMPLEMENTARY', 'OPTIONAL', name='exercise__status'), nullable=True),
    sa.Column('max_score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'external_id', name='session_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_exercise_external_id'), 'exercise', ['external_id'], unique=False)
    op.create_table('studentgroup',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('group_title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'external_id', name='session_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_studentgroup_external_id'), 'studentgroup', ['external_id'], unique=False)
    op.create_table('testcase',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.Column('test_input', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expected_output', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('percentage_score', sa.Float(), nullable=False),
    sa.Column('max_score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exercise_id', 'external_id', name='exercise_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_testcase_external_id'), 'testcase', ['external_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('TUTOR', 'STUDENT', name='user__role'), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['studentgroup.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'external_id', name='session_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_user_external_id'), 'user', ['external_id'], unique=False)
    op.create_table('submission',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('status', sa.Enum('QUEUED', 'IN_PROGRESS', 'GRADED', 'FAILED', name='submission__status'), nullable=True),
    sa.Column('total_score', sa.Float(), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['studentgroup.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercisesubmission',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('submission_id', sa.Uuid(), nullable=False),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.Column('graded', sa.Boolean(), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('testcaseresult',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('submission_id', sa.Uuid(), nullable=False),
    sa.Column('test_case_id', sa.Uuid(), nullable=False),
    sa.Column('passed', sa.Boolean(), nullable=False),
    sa.Column('std_out', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=False),
    sa.Column('exit_code', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['exercisesubmission.id'], ),
    sa.ForeignKeyConstraint(['test_case_id'], ['testcase.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('testcaseresult')
    op.drop_table('exercisesubmission')
    op.drop_table('submission')
    op.drop_index(op.f('ix_user_external_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_testcase_external_id'), table_name='testcase')
    op.drop_table('testcase')
    op.drop_index(op.f('ix_studentgroup_external_id'), table_name='studentgroup')
    op.drop_table('studentgroup')
    op.drop_index(op.f('ix_exercise_external_id'), table_name='exercise')
    op.drop_table('exercise')
    op.drop_index(op.f('ix_session_external_id'), table_name='session')
    op.drop_table('session')
    # ### end Alembic commands ###
